{"version":3,"sources":["App.js","serviceWorker.js","index.js","croc.png"],"names":["firstWords","secondWords","getRandomItem","array","Math","floor","random","length","generateSecondaryParties","party","concat","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","generated","secondaryParties","onClick","bind","assertThisInitialized","onShareClick","setState","window","ga","FB","ui","method","display","quote","href","response","_this$state","react_default","a","createElement","className","map","sparty","src","croc","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"oRAKMA,SAAa,CACf,eACA,qBACA,iCACA,2BACA,qBACA,sBACA,qBACA,2BACA,uCACA,uCACA,qBACA,2BACA,qBACA,+DACA,uCACA,uCACA,2BACA,iCACA,mDACA,uCACA,uCACA,6CACA,mDACA,6CACA,uCACA,uCACA,2BACA,mDACA,2BACA,iCACA,eACA,qBACA,iCACA,2BACA,2BACA,eACA,iCACA,2BACA,iCACA,eACA,eACA,2BACA,sBACA,sBACA,2BACA,iCACA,iCACA,2BACA,6CACA,sBACA,iCACA,iCACA,sBACA,uCACA,iCACA,uCACA,yDACA,mDACA,6CACA,iCACA,uCACA,6CACA,uCACA,iCACA,6CACA,uCACA,qBACA,iCACA,qBACA,qBACA,iCACA,qBACA,qBACA,qBACA,2BACA,iCACA,eACA,2BACA,iCACA,qBACA,qBACA,qBACA,2BACA,2BACA,iCACA,qBACA,2BACA,qBACA,iCACA,qBACA,2BACA,qBACA,iCACA,iCACA,iCACA,iCACA,qBACA,6BAGEC,EAAc,CAChB,iCACA,2BACA,uCACA,iCACA,2BACA,qBACA,uCACA,iCACA,2BACA,qBACA,iCACA,2BACA,sEACA,uCACA,6CACA,6CACA,qEACA,iCACA,iCACA,uCACA,2BACA,uCACA,mDACA,uCACA,uCACA,uCACA,2BACA,2BACA,2BACA,2BACA,qBACA,uCACA,iCACA,2BACA,uCACA,iCACA,mDACA,uCACA,mDACA,uCACA,uCACA,2BACA,mDACA,uCACA,uCACA,iCACA,mDACA,6CACA,yDACA,6CACA,6CACA,qEACA,2BACA,uCACA,2BACA,2BACA,6CACA,uCACA,qBACA,iCACA,qBACA,uCACA,uCACA,iCACA,iCACA,kCAGEC,EAAgB,SAACC,GAAD,OAAWA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,UAIlEC,EAA2B,SAACC,GAC9B,MAAO,6BAAAC,OACKD,GADL,kCAAAC,OAEMD,GAFN,GAAAC,OAGAD,EAHA,sCAAAC,OAIAD,EAJA,2CA4FIE,cAlFX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAQ,CACTC,WAAW,EACXX,MAAO,GACPY,iBAAkB,IAGtBT,EAAKU,QAAUV,EAAKU,QAAQC,KAAbV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACfA,EAAKa,aAAeb,EAAKa,aAAaF,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAVVA,yEAeV,IAAMH,EA5Ba,GAAAC,OAASR,EAAcF,GAAvB,KAAAU,OAAsCR,EAAcD,IA6BvEc,KAAKW,SAAS,CACVN,WAAW,EACXX,MAAOA,EACPY,iBAAkBb,EAAyBC,KAG/CkB,OAAOC,GAAG,OAAQ,QAAS,SAAU,WAAYnB,0CAIjDkB,OAAOE,GAAGC,GAAG,CACTC,OAAQ,QACRC,QAAS,QACTC,MAAK,8EAAAvB,OAAoBK,KAAKI,MAAMV,MAA/B,+BACLyB,KAAM,2CACP,SAAUC,MAGbR,OAAOC,GAAG,OAAQ,QAAS,SAAU,QAASb,KAAKI,MAAMV,wCAGpD,IAAA2B,EAE0CrB,KAAKI,MAA5CC,EAFHgB,EAEGhB,UAAWX,EAFd2B,EAEc3B,MAAOY,EAFrBe,EAEqBf,iBAE1B,OAEIgB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,8EAAsCH,EAAAC,EAAAC,cAAA,oEACtCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,kJACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBACVlB,QAASP,KAAKO,SAAUF,EAAY,0DAAe,kEAG9DA,GAEGiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,sIACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS/B,GAExB4B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAQlB,QAASP,KAAKU,cAAxC,oEAGJY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,yEACCnB,EAAiBoB,IAAI,SAAAC,GAAM,OACxBL,EAAAC,EAAAC,cAAA,WAAMG,MAMlBL,EAAAC,EAAAC,cAAA,OAAKI,IAAKC,IAAMJ,UAAU,iBAvExBK,aChLEC,QACW,cAA7BnB,OAAOoB,SAASC,UAEe,UAA7BrB,OAAOoB,SAASC,UAEhBrB,OAAOoB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOd,EAAAC,EAAAC,cAACa,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.7968dd8a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport croc from './croc.png';\nimport './App.css';\n\nconst firstWords = [\n    \"זה\",\n    \"אני\",\n    \"אגודת\",\n    \"אהבת\",\n    \"אור\",\n    \"אח\\\"י\",\n    \"אחי\",\n    \"אחים\",\n    \"אחיעזר\",\n    \"אחריות\",\n    \"ארץ\",\n    \"ברית\",\n    \"גיל\",\n    \"דמוקראטורה\",\n    \"האיחוד\",\n    \"האמונה\",\n    \"הבית\",\n    \"הברית\",\n    \"הישראלים\",\n    \"הליכוד\",\n    \"המפלגה\",\n    \"הסתדרות\",\n    \"הפיראטים\",\n    \"הציונות\",\n    \"התנועה\",\n    \"התקווה\",\n    \"זהות\",\n    \"זכויותנו\",\n    \"חזית\",\n    \"חירות\",\n    \"חץ\",\n    \"יחד\",\n    \"ייצוג\",\n    \"ימין\",\n    \"יעוד\",\n    \"יש\",\n    \"ישראל\",\n    \"כבוד\",\n    \"כולנו\",\n    \"כח\",\n    \"לב\",\n    \"לזוז\",\n    \"לח\\\"ם\",\n    \"מד\\\"ע\",\n    \"מהפך\",\n    \"מולדת\",\n    \"מורשת\",\n    \"מימד\",\n    \"מנהיגות\",\n    \"מפ\\\"ם\",\n    \"מפלגה\",\n    \"פנינה\",\n    \"גה\\\"ת\",\n    \"האחדות\",\n    \"אחדות\",\n    \"הבחירה\",\n    \"ההתיישבות\",\n    \"התיישבות\",\n    \"הירוקים\",\n    \"המרכז\",\n    \"העבודה\",\n    \"העצמאות\",\n    \"עצמאות\",\n    \"הערבי\",\n    \"הרפורמה\",\n    \"רפורמה\",\n    \"חוק\",\n    \"כלכלה\",\n    \"נגב\",\n    \"עלה\",\n    \"קזינו\",\n    \"מרצ\",\n    \"נוי\",\n    \"נצח\",\n    \"עצמה\",\n    \"עלי״ה\",\n    \"עם\",\n    \"עתיד\",\n    \"פעולה\",\n    \"פרח\",\n    \"צבר\",\n    \"צדק\",\n    \"צומת\",\n    \"צל״ש\",\n    \"קדימה\",\n    \"קול\",\n    \"רע״ש\",\n    \"ר״צ\",\n    \"רשימת\",\n    \"ש״ס\",\n    \"חוסן\",\n    \"גשר\",\n    \"שינוי\",\n    \"תנופה\",\n    \"תפנית\",\n    \"המחנה\",\n    \"דגל\",\n    \"חברה\"\n];\n\nconst secondWords = [\n    \"מקומי\",\n    \"ואתה\",\n    \"החרדים\",\n    \"ישראל\",\n    \"שלנו\",\n    \"ארץ\",\n    \"ישראלי\",\n    \"אנחנו\",\n    \"חדשה\",\n    \"חדש\",\n    \"חדשים\",\n    \"עולם\",\n    \"הלאומי-תקומה\",\n    \"היהודי\",\n    \"המתקדמת\",\n    \"הלאומית\",\n    \"הקומוניסטית\",\n    \"אגודת\",\n    \"החדשה\",\n    \"החדשים\",\n    \"החדש\",\n    \"הערבית\",\n    \"להתחדשות\",\n    \"בקולנו\",\n    \"יהודית\",\n    \"לאומית\",\n    \"שווה\",\n    \"עתיד\",\n    \"תקוה\",\n    \"אחרת\",\n    \"אחת\",\n    \"ביתינו\",\n    \"בעליה\",\n    \"חזקה\",\n    \"ומסורת\",\n    \"חברים\",\n    \"לגימלאים\",\n    \"להשפיע\",\n    \"הישראלית\",\n    \"לישראל\",\n    \"בחינוך\",\n    \"אבות\",\n    \"דמוקרטית\",\n    \"מקומית\",\n    \"מתקדמת\",\n    \"ערבית\",\n    \"רוזנבלום\",\n    \"הותיקים\",\n    \"הדמוקרטית\",\n    \"ליברלית\",\n    \"איסלמית\",\n    \"הפרוגרסיבית\",\n    \"החדש\",\n    \"הירוקה\",\n    \"הטבע\",\n    \"ירוק\",\n    \"לשכונות\",\n    \"ותקווה\",\n    \"אחד\",\n    \"חברתי\",\n    \"לכל\",\n    \"הסביבה\",\n    \"הציוני\",\n    \"התורה\",\n    \"הערבי\",\n    \"יהדות\"\n];\n\nconst getRandomItem = (array) => array[Math.floor(Math.random() * array.length)];\n\nconst randomizePartyName = () => `${getRandomItem(firstWords)} ${getRandomItem(secondWords)}`;\n\nconst generateSecondaryParties = (party) => {\n    return [\n        `יותר ${party}`,\n        `כולנו ${party}`,\n        `${party} החדשה`,\n        `${party} לישראל`,\n    ];\n};\n\nclass App extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            generated: false,\n            party: '',\n            secondaryParties: []\n        };\n\n        this.onClick = this.onClick.bind(this);\n        this.onShareClick = this.onShareClick.bind(this);\n    }\n\n    onClick() {\n\n        const party = randomizePartyName();\n        this.setState({\n            generated: true,\n            party: party,\n            secondaryParties: generateSecondaryParties(party)\n        });\n\n        window.ga('send', 'event', 'Button', 'Generate', party);\n    }\n\n    onShareClick() {\n        window.FB.ui({\n            method: 'share',\n            display: 'popup',\n            quote: `המפלגה שלי היא ${this.state.party}. ושלך?`,\n            href: 'https://nati-levi.github.io/miflagator/',\n        }, function (response) {\n        });\n\n        window.ga('send', 'event', 'Button', 'Share', this.state.party);\n    }\n\n    render() {\n\n        const { generated, party, secondaryParties } = this.state;\n\n        return (\n\n            <div>\n                <div className=\"green-bg\">\n                    <div className=\"title\">מחוללים מהפכה. <strong>המפלגטור.</strong></div>\n                    <div className=\"desc\">מחולל שמות המפלגות של ישראל</div>\n                    <button className=\"generate-button\"\n                            onClick={this.onClick}>{generated ? \"חוללו מחדש\" : \"לחצו וחוללו\"}</button>\n                </div>\n\n                {generated && (\n\n                    <div className=\"shows-after-click\">\n                        <div className=\"congratulations\">ברכותינו! המפלגטור ממליץ:</div>\n                        <div className=\"party\">{party}</div>\n\n                        <div>\n                            <button className=\"share\" onClick={this.onShareClick}>שתפו בכל הכח!</button>\n                        </div>\n\n                        <div className=\"congratulations\">אולי תאהבו גם:</div>\n                        {secondaryParties.map(sparty => (\n                            <div>{sparty}</div>\n                        ))}\n\n                    </div>\n                )}\n\n                <img src={croc} className=\"croc\"/>\n\n                {/*<div className=\"fb-share-button\"*/}\n                {/*data-href=\"https://nati-levi.github.io/miflagator/\"*/}\n                {/*data-layout=\"button_count\">*/}\n                {/*</div>*/}\n            </div>\n\n\n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/croc.1f71e715.png\";"],"sourceRoot":""}